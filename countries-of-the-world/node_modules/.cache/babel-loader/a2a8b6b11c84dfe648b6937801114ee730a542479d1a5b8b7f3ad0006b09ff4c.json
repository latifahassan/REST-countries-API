{"ast":null,"code":"var _jsxFileName = \"/home/hassanlatifa98/REST-countries-API/countries-of-the-world/src/CountryList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const API_URL_ALL = 'https://restcountries.com/v3.1/all';\nexport const API_URL_NAME = name => `https://restcountries.com/v3.1/name/${name}`;\n_c = API_URL_NAME;\nexport const API_URL_REGION = region => `https://restcountries.com/v3.1/region/${region}`;\n_c2 = API_URL_REGION;\nexport const API_URL_CODE = borders => `https://restcountries.com/v3.1/alpha?codes=${borders.join(',')}`;\n_c3 = API_URL_CODE;\nconst CountryCard = styled(Card)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    borderRadius: theme.spacing(2),\n    boxShadow: theme.shadows[3],\n    marginBottom: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    height: '100%'\n  };\n});\n_c4 = CountryCard;\nconst FlagImage = styled('div')(_ref2 => {\n  let {\n    imageUrl\n  } = _ref2;\n  return {\n    width: '100%',\n    paddingBottom: '56.25%',\n    // 16:9 aspect ratio (adjust as needed)\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundImage: `url(${imageUrl})`\n  };\n});\n_c5 = FlagImage;\nconst CountryList = () => {\n  _s();\n  const [countryList, setCountryList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchCountryList = async () => {\n      const response = await fetch(API_URL_ALL);\n      if (!response.ok) {\n        throw new Error('Failed to fetch country data');\n      }\n      const data = await response.json();\n\n      // Log flag dimensions for each country\n      data.forEach(country => {\n        const flagImage = new Image();\n        flagImage.src = country.flags.svg;\n        flagImage.onload = () => {\n          console.log(`${country.name.common}: ${flagImage.width}px x ${flagImage.height}px`);\n        };\n      });\n      setCountryList(data);\n      setLoading(false);\n    };\n    fetchCountryList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    py: 4,\n    px: 2,\n    maxWidth: \"1200px\",\n    mx: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: loading ?\n      /*#__PURE__*/\n      // Render skeleton or loading state here\n      _jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : countryList.map(country => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${country.name.common}`,\n          className: \"country-link\",\n          children: /*#__PURE__*/_jsxDEV(CountryCard, {\n            children: [/*#__PURE__*/_jsxDEV(FlagImage, {\n              imageUrl: country.flags.svg,\n              paddingBottom: `${885 / 726 * 100}%`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                component: \"div\",\n                children: country.name.common\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: [\"Region: \", country.region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: [\"Capital: \", country.capital]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                component: \"p\",\n                children: [\"Population: \", country.population]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, country.name.common, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryList, \"/4GTNV2ILsx6Bd5vpO8Hjfluow0=\");\n_c6 = CountryList;\nexport default CountryList;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"API_URL_NAME\");\n$RefreshReg$(_c2, \"API_URL_REGION\");\n$RefreshReg$(_c3, \"API_URL_CODE\");\n$RefreshReg$(_c4, \"CountryCard\");\n$RefreshReg$(_c5, \"FlagImage\");\n$RefreshReg$(_c6, \"CountryList\");","map":{"version":3,"names":["React","useEffect","useState","Link","Card","CardContent","Typography","Grid","Box","styled","jsxDEV","_jsxDEV","API_URL_ALL","API_URL_NAME","name","_c","API_URL_REGION","region","_c2","API_URL_CODE","borders","join","_c3","CountryCard","_ref","theme","borderRadius","spacing","boxShadow","shadows","marginBottom","display","flexDirection","justifyContent","height","_c4","FlagImage","_ref2","imageUrl","width","paddingBottom","backgroundSize","backgroundPosition","backgroundImage","_c5","CountryList","_s","countryList","setCountryList","loading","setLoading","fetchCountryList","response","fetch","ok","Error","data","json","forEach","country","flagImage","Image","src","flags","svg","onload","console","log","common","py","px","maxWidth","mx","children","container","fileName","_jsxFileName","lineNumber","columnNumber","map","item","xs","sm","md","lg","to","className","variant","component","color","capital","population","_c6","$RefreshReg$"],"sources":["/home/hassanlatifa98/REST-countries-API/countries-of-the-world/src/CountryList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/system';\n\nexport const API_URL_ALL = 'https://restcountries.com/v3.1/all';\n\nexport const API_URL_NAME = (name) =>\n  `https://restcountries.com/v3.1/name/${name}`;\n\nexport const API_URL_REGION = (region) =>\n  `https://restcountries.com/v3.1/region/${region}`;\n\nexport const API_URL_CODE = (borders) =>\n  `https://restcountries.com/v3.1/alpha?codes=${borders.join(',')}`;\n\n  const CountryCard = styled(Card)(({ theme }) => ({\n    borderRadius: theme.spacing(2),\n    boxShadow: theme.shadows[3],\n    marginBottom: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    height: '100%',\n  }));\n  \n  const FlagImage = styled('div')(({ imageUrl }) => ({\n    width: '100%',\n    paddingBottom: '56.25%', // 16:9 aspect ratio (adjust as needed)\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundImage: `url(${imageUrl})`,\n  }));\n  \n\nconst CountryList = () => {\n  const [countryList, setCountryList]= useState([]);\n  const [loading, setLoading] = useState(true);\n\n useEffect(() => {\n  const fetchCountryList = async () => {\n    const response = await fetch(API_URL_ALL);\n    if (!response.ok) {\n      throw new Error('Failed to fetch country data');\n    }\n    const data = await response.json();\n\n    // Log flag dimensions for each country\n    data.forEach((country) => {\n      const flagImage = new Image();\n      flagImage.src = country.flags.svg;\n      flagImage.onload = () => {\n        console.log(`${country.name.common}: ${flagImage.width}px x ${flagImage.height}px`);\n      };\n    });\n\n    setCountryList(data);\n    setLoading(false);\n  };\n\n  fetchCountryList();\n}, []);\n\n  return (\n    <Box py={4} px={2} maxWidth=\"1200px\" mx=\"auto\">\n      <Grid container spacing={4}>\n        {loading ? (\n          // Render skeleton or loading state here\n          <p>Loading...</p>\n        ) : (\n          countryList.map((country) => (\n            <Grid item key={country.name.common} xs={12} sm={6} md={4} lg={3}>\n              <Link to={`/${country.name.common}`} className=\"country-link\">\n                <CountryCard>\n                <FlagImage imageUrl={country.flags.svg} paddingBottom={`${(885 / 726) * 100}%`} />\n                  <CardContent>\n                    <Typography variant=\"h5\" component=\"div\">{country.name.common}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Region: {country.region}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Capital: {country.capital}</Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Population: {country.population}</Typography>\n                  </CardContent>\n                </CountryCard>\n              </Link>\n            </Grid>\n          ))\n        )}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default CountryList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}