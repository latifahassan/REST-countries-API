{"ast":null,"code":"var _jsxFileName = \"/home/hassanlatifa98/REST-countries-API/countries-of-the-world/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';\nimport CountryDetails from './CountryDetails';\nimport CountryList from './CountryList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const lightTheme = createTheme({\n    palette: {\n      mode: 'light'\n    }\n  });\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n      background: {\n        default: '#1F2937',\n        // Dark blue background color\n        paper: '#374151' // Dark blue surface color\n      },\n\n      text: {\n        primary: '#FFFFFF' // White text color\n      }\n    }\n  });\n\n  const toggleMode = () => {\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n  const handleCountrySelect = country => {\n    setSelectedCountry(country);\n  };\n  const handleRegionChange = event => {\n    setSelectedRegion(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: mode === 'light' ? lightTheme : darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        color: \"inherit\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              flexGrow: 1\n            },\n            children: \"Where in the World?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CountryList, {\n            selectedRegion: selectedRegion,\n            handleRegionChange: handleRegionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            onClick: toggleMode,\n            children: mode === 'light' ? /*#__PURE__*/_jsxDEV(DarkModeOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 35\n            }, this) : /*#__PURE__*/_jsxDEV(DarkModeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(CountryList, {\n            selectedCountry: selectedCountry,\n            handleCountrySelect: handleCountrySelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:name\",\n          element: /*#__PURE__*/_jsxDEV(CountryDetails, {\n            selectedCountry: selectedCountry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"W0QSQCA8wKIVLE1N8nPyU/jmtJk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","createTheme","ThemeProvider","CssBaseline","AppBar","Toolbar","Typography","IconButton","DarkModeIcon","DarkModeOutlinedIcon","CountryDetails","CountryList","jsxDEV","_jsxDEV","App","_s","mode","setMode","selectedCountry","setSelectedCountry","lightTheme","palette","darkTheme","background","default","paper","text","primary","toggleMode","prevMode","handleCountrySelect","country","handleRegionChange","event","setSelectedRegion","target","value","theme","children","fileName","_jsxFileName","lineNumber","columnNumber","className","position","color","variant","component","sx","flexGrow","selectedRegion","onClick","path","element","_c","$RefreshReg$"],"sources":["/home/hassanlatifa98/REST-countries-API/countries-of-the-world/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport DarkModeOutlinedIcon from '@mui/icons-material/DarkModeOutlined';\n\nimport CountryDetails from './CountryDetails';\nimport CountryList from './CountryList';\n\n\nexport default function App() {\n  const [mode, setMode] = useState('light');\n  const [selectedCountry, setSelectedCountry] = useState(null);\n \n\n  const lightTheme = createTheme({\n    palette: {\n      mode: 'light',\n    },\n  });\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n      background: {\n        default: '#1F2937', // Dark blue background color\n        paper: '#374151', // Dark blue surface color\n      },\n      text: {\n        primary: '#FFFFFF', // White text color\n      },\n    },\n  });\n\n  const toggleMode = () => {\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n  };\n\n  const handleCountrySelect = (country) => {\n    setSelectedCountry(country);\n  };\n\n  const handleRegionChange = (event) => {\n    setSelectedRegion(event.target.value);\n  };\n\nreturn (\n    <ThemeProvider theme={mode === 'light' ? lightTheme : darkTheme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <AppBar position=\"static\" color=\"inherit\">\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              Where in the World?\n            </Typography>\n            <CountryList\n              selectedRegion={selectedRegion}\n              handleRegionChange={handleRegionChange}\n            />\n\n            <IconButton color=\"inherit\" onClick={toggleMode}>\n              {mode === 'light' ? <DarkModeOutlinedIcon /> : <DarkModeIcon />}\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<CountryList selectedCountry={selectedCountry} handleCountrySelect={handleCountrySelect} />}\n          />\n          <Route path=\"/:name\" element={<CountryDetails selectedCountry={selectedCountry} />} />\n        </Routes>\n      </div>\n    </ThemeProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}